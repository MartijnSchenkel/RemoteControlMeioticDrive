breaks = c(0, 0.25, 0.5, 0.75, 1)) +
labs(x = "Generations", y = "Frequency") +
theme(panel.background = element_rect(fill = "white", color = "black"),
axis.line = element_line(color = "black"))
pC
library(tidyverse)
library(viridis)
library(ggpattern)
library(cowplot)
# Administrative setup
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Read data
dA <- read.table("data_5A.txt", T) %>% as_tibble()
dB <- read.table("data_5B.txt", T) %>% as_tibble()
dC <- read.table("data_5C.txt", T) %>% as_tibble()
dD <- read.table("data_5D.txt", T) %>% as_tibble()
dE <- read.table("data_5E.txt", T) %>% as_tibble()
# Plot A
dA2 <- dA %>% gather(X, Y, A, D, O, value = "Frequency", key = "Allele")
dA2end <- dA2 %>% filter(G == max(G))
dA2end
delta <- 0.045
dtA <- tibble(text = c('X', 'Y', 'O',
'italic(A)[2]', 'italic(D)[2]'),
x = c(450, 450, 450, 400, 450),
y = c(0.381 + delta,
0 + delta,
0.619 + delta,
0.381 + delta,
0.357 - delta),
Allele = unique(dA2$Allele))
dtA
pA <- dA2 %>% filter(G <= 500) %>% ggplot(aes(G, Frequency, color = Allele)) + geom_line(linewidth = 0.8) +
scale_color_viridis(discrete = T, end = 0.8,
labels = c(bquote(italic(A)[2]),
bquote(italic(D)[2]),
"X", "Y")) +
geom_hline(yintercept = 0.5, color = "black", linetype = 2, linewidth = 0.8) +
scale_x_continuous(limits = c(0, 500), expand = c(0,0)) +
scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1), expand = c(0,0)) +
labs(x = "Generations") +
geom_text(data = dtA, aes(x, y, color = Allele, label = text), parse = T, inherit.aes = F) +
theme(panel.background = element_rect(fill = "white"),
axis.line = element_line(color = "black"))
pA
# Plot B
dB2 <- dB %>% filter(G <= 500) %>% gather(DA2D2, DA2Y, DD2Y, value = "LD", key = "Haplotype")
dB2end <- dB2 %>% filter(G == max(G))
delta <- 0.0175
dtB <- tibble(text = c(bquote(italic(Assister-Distorter)),
bquote(italic(Assister)*"-XY0"),
bquote(italic(Distorter)*"-XY0")),
x = c(390,420,420), y = c(0.25, 0.035, 0.06),
Haplotype = unique(dB2$Haplotype))
dtB
pB <- dB2 %>% filter(G <= 500) %>% ggplot(aes(G, LD, color = Haplotype)) + geom_line(linewidth = 0.8) +
scale_color_viridis(discrete = T, end = 0.8,
labels = c(bquote(italic(A)[2]~italic(D)[2]),
bquote(italic(A)[2]~"Y"),
bquote(italic(D)[2]~"Y"))) +
geom_hline(yintercept = 0, color = "black", linetype = 2, linewidth = 0.8) +
scale_x_continuous(limits = c(0, 500), expand = c(0,0)) +
scale_y_continuous(limits = c(0, 0.25),
breaks = c(0, 0.05, 0.1, 0.15, 0.2,0.25),
expand = c(0.01,0.01)) +
labs(x = "Generations", y = "Linkage Disequilibrium") +
geom_text(data = dtB, aes(x, y, color = Haplotype, label = text), parse = T, inherit.aes = F) +
theme(panel.background = element_rect(fill = "white", color = "black"),
axis.line = element_line(color = "black"))
pB
# Plot C
dC2 <- dC %>% mutate(tot = A1D1X + A2D1X + A1D1Y + A2D1Y +
A1D2X + A2D2X + A1D2Y + A2D2Y +
A1D1O + A1D2O + A2D1O + A2D2O)
dC2 <- dC2 %>% mutate(A1D1X = A1D1X / tot,
A2D1X = A2D1X / tot,
A1D1Y = A1D1Y / tot,
A2D1Y = A2D1Y / tot,
A1D2X = A1D2X / tot,
A2D2X = A2D2X / tot,
A1D2Y = A1D2Y / tot,
A2D2Y = A2D2Y / tot)
dC3 <- dC2 %>% gather(A1D1X, A2D1X, A1D1Y, A2D1Y, A1D1O, A2D1O,
A1D2X, A2D2X, A1D2Y, A2D2Y, A1D2O, A2D2O,
value = "Frequency", key = "Haplotype")
dC4 <- dC3 %>% mutate(Haplotype = factor(Haplotype, c("A1D1X", "A2D1X", "A1D1Y", "A2D1Y",
"A1D1O", "A2D1O",
"A1D2X", "A2D2X", "A1D2Y", "A2D2Y",
"A1D2O", "A2D2O")),
Hatch = ifelse(Haplotype %in% c("A1D2X", "A2D2X", "A1D2Y", "A2D2Y",
"A1D2O", "A2D2O"), 1, 0))
# max(dC3$tot)
text <- c(bquote(italic(A)[1]~italic(D)[1]~"X"),
bquote(italic(A)[2]~italic(D)[1]~"X"),
bquote(italic(A)[2]~italic(D)[1]~"O"),
bquote(italic(A)[2]~italic(D)[2]~"X"),
bquote(italic(A)[2]~italic(D)[2]~"O"),
bquote(italic(A)[1]~italic(D)[1]~"Y"),
bquote(italic(A)[2]~italic(D)[1]~"Y"))
yvals <- c(0.85, 0.72, 0.55, 0.32, 0.13, 0.46, 0.23)
xvals <- c(375, 75, 375, 375, 375, 125, 75)
angle <- c(0, 0, 0, 0, 0, 0, 0)
dtC <- tibble(text, yvals, xvals, angle)
vircol <- viridis_pal()(12)
pC <- dC4 %>% filter(G <=500) %>% filter(Hatch == 1) %>% ggplot(aes(G, Frequency, fill = Haplotype)) +
geom_area(data = dC4, aes(G, Frequency, fill = Haplotype),
color = "black", alpha = 0.8) +
geom_area_pattern(aes(pattern = Hatch),
color = 'black', alpha = 0, pattern = "stripe",
pattern_angle = 45, pattern_color = "black",
pattern_density = 0.001,
pattern_spacing = 0.03) +
geom_rect(aes(xmin = 335, xmax = 415, ymin = 0.115, ymax = 0.145), fill = "white") +
geom_rect(aes(xmin = 335, xmax = 415, ymin = 0.305, ymax = 0.335), fill = "white") +
annotate('rect', xmin = 335, xmax = 415, ymin = 0.115, ymax = 0.145,
alpha = 0.8, fill = vircol[12]) +
annotate('rect', xmin = 335, xmax = 415, ymin = 0.305, ymax = 0.335,
alpha = 0.8, fill = vircol[8]) +
# geom_rect(aes(xmin = 420, xmax = 500, ymin = 0.113, ymax = 0.115), fill = "white") +
# annotate('rect', xmin = 420, xmax = 500, ymin = 0.113, ymax = 0.115,
#          alpha = 0.8, fill = vircol[6]) +
geom_area(data = dC4, aes(G, Frequency, fill = Haplotype),
color = "black", alpha = 0) +
theme(plot.background = element_blank(),
panel.background = element_blank()) +
scale_fill_viridis(discrete = T) +
geom_text(data = dtC, aes(x = xvals, y = yvals, label = text, angle = angle*90), inherit.aes = F, parse = T) +
scale_x_continuous(limits = c(0, 501), expand = c(0,0)) +
scale_y_continuous(limits = c(0, 1.001), expand =c(0.0, 0),
breaks = c(0, 0.25, 0.5, 0.75, 1)) +
labs(x = "Generations", y = "Frequency") +
theme(panel.background = element_rect(fill = "white", color = "black"),
axis.line = element_line(color = "black"))
pC
pD <- dD %>% ggplot(aes(kD, kA, z = DF)) + geom_contour_filled(color = "black",bins=10) +
scale_fill_viridis(option = "A", discrete = T,
labels = seq(0, 0.7, 0.05)) +
scale_x_continuous(limits = c(0, 0.5), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.5), expand = c(0, 0),
breaks = seq(0, 0.5, 0.1)) +
labs(x = bquote(italic(trans)~"drive strength ("*italic(k)[D]*")"),
y = bquote(italic(cis)~"drive strength ("*italic(k)[A]*")"),
fill = bquote("["*italic(D)[2]~"]")) +
theme(panel.background = element_rect(fill = "white", color = "black"))
# pD
# Plot E
pE <- dE %>% ggplot(aes(kD, kA, z = SR)) + geom_contour_filled(color = "black", bins=11) +
scale_fill_viridis(option = "mako", discrete = T,
labels = seq(0.5, 0.70, 0.02)) +
scale_x_continuous(limits = c(0, 0.5), expand = c(0,0)) +
scale_y_continuous(limits = c(0, 0.5), expand = c(0, 0),
breaks = c(0, 0.25, 0.5, 0.75, 1)) +
labs(x = bquote(italic(trans)~"drive strength ("*italic(k)[D]*")"),
y = bquote(italic(cis)~"drive strength ("*italic(k)[A]*")"),
fill = "Sex ratio") +
theme(panel.background = element_rect(fill = "white", color = "black"))
pE
legend_D <- get_legend(
pD +
guides(fill = guide_legend(reverse = TRUE)) +
theme(legend.key.size = unit(0.5, "cm")) +
theme(legend.key.height = unit(0.35, "cm")) # Adjust size here
)
legend_E <- get_legend(
pE +
guides(fill = guide_legend(reverse = TRUE)) +
theme(legend.key.size = unit(0.5, "cm"))+
theme(legend.key.height = unit(0.35, "cm")) # Adjust size here
)
topleft <- plot_grid(pA + theme(legend.position = "none"),
pB + theme(legend.position = "none"),
ncol = 1, nrow = 2, labels = c("A", "B"))
topright  <-  plot_grid(pC + theme(legend.position = "none"), labels = "C")
top <- plot_grid(topleft, NULL, topright,NULL, ncol = 4,
rel_widths = c(0.425, 0.075, 0.45, 0.075))
bottom <- plot_grid(pD+ theme(legend.position = "none"), legend_D,
pE + theme(legend.position = "none"), legend_E,
ncol = 4, labels = c("D", "", "E", ""),
rel_widths = c(0.425, 0.075, 0.45, 0.075))
plot <-  plot_grid(top, bottom, ncol = 1, nrow = 2, rel_heights = c(0.6, 0.4))
plot
pdf(file = "2025_04_24_Figure_5.pdf", width = 10, height = 10)
plot
dev.off()
png(file = "2025_04_24_Figure_5.png", width = 10, height = 10, units = "in", res = 1000)
plot
dev.off()
# EVOLUTION of XO from XY; using a male-limited  drive system
#1= D1A1 (X-shredder, male beneficial)
#2= D1A2 (X-shredder, female beneficial)
#3= D2A1 (neutral, male beneficial)
#4= D2A2 (neutral, female beneficial)
#parameters
G <- 500
z <- 0.00  # Fitness cost of the trans driver
s <- 0.50  # Fitness cost of cis driver
hA <- 0.0   # Dominance of cis driver
kD <- 0.0   # Skew in favor of Y chromosome (trans drive) in males
kA <- 0.25   # Skew in favor of A2 (cis drive) in males
r <- 0.001 # Recombination rate
w <-0
###BURN IN
u11f <- 1
u12f <- 1
u21f <- 1
u22f <- 1
u11m <- 1
u12m <- 1-z
u21m <- 1-z
u22m <- 1-z
# v is the female beneficial locus (1 is female beneficial, 2 is male beneficial)
v11f <- 1
v12f <- 1-hA*s
v21f <- 1-hA*s
v22f <- 1-s
v11m <- 1-s
v12m <- 1-(1-hA)*s
v21m <- 1-(1-hA)*s
v22m <- 1
w11f <- u11f*v11f
w12f <- u11f*v12f
w13f <- u12f*v11f
w14f <- u12f*v12f
w21f <- u11f*v21f
w22f <- u11f*v22f
w23f <- u12f*v21f
w24f <- u12f*v22f
w31f <- u21f*v11f
w32f <- u21f*v12f
w33f <- u22f*v11f
w34f <- u22f*v12f
w41f <- u21f*v21f
w42f <- u21f*v22f
w43f <- u22f*v21f
w44f <- u22f*v22f
w11Ym <- u11m*v11m
w12Ym <- u11m*v12m
w13Ym <- u12m*v11m
w14Ym <- u12m*v12m
w21Ym <- u11m*v21m
w22Ym <- u11m*v22m
w23Ym <- u12m*v21m
w24Ym <- u12m*v22m
w31Ym <- u21m*v11m
w32Ym <- u21m*v12m
w33Ym <- u22m*v11m
w34Ym <- u22m*v12m
w41Ym <- u21m*v21m
w42Ym <- u21m*v22m
w43Ym <- u22m*v21m
w44Ym <- u22m*v22m
w11Om <- u11m*v11m*(1-w)
w12Om <- u11m*v12m*(1-w)
w13Om <- u12m*v11m*(1-w)
w14Om <- u12m*v12m*(1-w)
w21Om <- u11m*v21m*(1-w)
w22Om <- u11m*v22m*(1-w)
w23Om <- u12m*v21m*(1-w)
w24Om <- u12m*v22m*(1-w)
w31Om <- u21m*v11m*(1-w)
w32Om <- u21m*v12m*(1-w)
w33Om <- u22m*v11m*(1-w)
w34Om <- u22m*v12m*(1-w)
w41Om <- u21m*v21m*(1-w)
w42Om <- u21m*v22m*(1-w)
w43Om <- u22m*v21m*(1-w)
w44Om <- u22m*v22m*(1-w)
g1e <- 0.5
g2e <- 0.5
g3e <- 0.0
g4e <- 0.0
g1Xs <- 0.25
g1Ys <- 0.25
g2Xs <- 0.25
g2Ys <- 0.25
g3Xs <- 0.0
g3Ys <- 0.0
g4Xs <- 0.0
g4Ys <- 0.0
g3Xs <- 0.0
g3Ys <- 0.0
g4Xs <- 0.0
g4Ys <- 0.0
g1Os <- 0.0
g2Os <- 0.0
g3Os <- 0.0
g4Os <- 0.0
for (d in 1:500){
wfbar<-(g1e*g1Xs*w11f)+(g1e*g2Xs*w12f)+(g1e*g3Xs*w13f)+(g1e*g4Xs*w14f)+(g2e*g1Xs*w21f)+(g2e*g2Xs*w22f)+(g2e*g3Xs*w23f)+(g2e*g4Xs*w24f)+(g3e*g1Xs*w31f)+(g3e*g2Xs*w32f)+(g3e*g3Xs*w33f)+(g3e*g4Xs*w34f)+(g4e*g1Xs*w41f)+(g4e*g2Xs*w42f)+(g4e*g3Xs*w43f)+(g4e*g4Xs*w44f)
g1e_pr<- (1/wfbar)*(1*g1e*g1Xs*w11f + 0.5* g1e*g2Xs*w12f + 0.5* g1e*g3Xs*w13f + 0.5*(1-r)* g1e*g4Xs*w14f + 0.5* g2e*g1Xs*w21f + 0.5*(r)* g2e*g3Xs*w23f + 0.5* g3e*g1Xs*w31f + 0.5*(r)* g3e*g2Xs*w32f + 0.5*(1-r)* g4e*g1Xs*w41f)
g2e_pr<- (1/wfbar)*(0.5* g1e*g2Xs*w12f + 0.5*(r)* g1e*g4Xs*w14f + 0.5* g2e*g1Xs*w21f + 1* g2e*g2Xs*w22f + 0.5*(1-r)* g2e*g3Xs*w23f + 0.5* g2e*g4Xs*w24f + 0.5*(1-r)* g3e*g2Xs*w32f + 0.5*(r)* g4e*g1Xs*w41f + 0.5* g4e*g2Xs*w42f)
g3e_pr<- (1/wfbar)*(0.5* g1e*g3Xs*w13f + 0.5*(r)* g1e*g4Xs*w14f + 0.5*(1-r)* g2e*g3Xs*w23f + 0.5* g3e*g1Xs*w31f + 0.5*(1-r)* g3e*g2Xs*w32f + 1* g3e*g3Xs*w33f + 0.5* g3e*g4Xs*w34f + 0.5*(r)* g4e*g1Xs*w41f + 0.5* g4e*g3Xs*w43f)
g4e_pr<- (1/wfbar)*(0.5*(1-r)* g1e*g4Xs*w14f + 0.5*(r)* g2e*g3Xs*w23f + 0.5* g2e*g4Xs*w24f + 0.5*(r)* g3e*g2Xs*w32f + 0.5* g3e*g4Xs*w34f + 0.5*(1-r)* g4e*g1Xs*w41f + 0.5* g4e*g2Xs*w42f + 0.5* g4e*g3Xs*w43f + 1* g4e*g4Xs*w44f)
wmbar<-(g1e*g1Ys*w11Ym)+(g1e*g2Ys*w12Ym)+(g1e*g3Ys*w13Ym)+(g1e*g4Ys*w14Ym)+(g2e*g1Ys*w21Ym)+(g2e*g2Ys*w22Ym)+(g2e*g3Ys*w23Ym)+(g2e*g4Ys*w24Ym)+(g3e*g1Ys*w31Ym)+(g3e*g2Ys*w32Ym)+(g3e*g3Ys*w33Ym)+(g3e*g4Ys*w34Ym)+(g4e*g1Ys*w41Ym)+(g4e*g2Ys*w42Ym)+(g4e*g3Ys*w43Ym)+(g4e*g4Ys*w44Ym)+(g1e*g1Os*w11Om)+(g1e*g2Os*w12Om)+(g1e*g3Os*w13Om)+(g1e*g4Os*w14Om)+(g2e*g1Os*w21Om)+(g2e*g2Os*w22Om)+(g2e*g3Os*w23Om)+(g2e*g4Os*w24Om)+(g3e*g1Os*w31Om)+(g3e*g2Os*w32Om)+(g3e*g3Os*w33Om)+(g3e*g4Os*w34Om)+(g4e*g1Os*w41Om)+(g4e*g2Os*w42Om)+(g4e*g3Os*w43Om)+(g4e*g4Os*w44Om)
g1Xs_pr<- (1/wmbar)*(0.5*1*g1e*g1Ys*w11Ym + 0.5*(0.5-kA)*g1e*g2Ys*w12Ym + (0.5-kD)*0.5*g1e*g3Ys*w13Ym + (0.5-kD)*(0.5-kA)*(1-r)*g1e*g4Ys*w14Ym + 0.5*(0.5-kA)*g2e*g1Ys*w21Ym + (0.5-kD)*(0.5-kA)*(r)*g2e*g3Ys*w23Ym + (0.5-kD)*0.5*g3e*g1Ys*w31Ym + (0.5-kD)*(0.5-kA)*(r)*g3e*g2Ys*w32Ym + (0.5-kD)*(0.5-kA)*(1-r)*g4e*g1Ys*w41Ym +0.5*1*g1e*g1Os*w11Om + 0.5*(0.5-kA)*g1e*g2Os*w12Om + (0.5-kD)*0.5*g1e*g3Os*w13Om + (0.5-kD)*(0.5-kA)*(1-r)*g1e*g4Os*w14Om + 0.5*(0.5-kA)*g2e*g1Os*w21Om + (0.5-kD)*(0.5-kA)*(r)*g2e*g3Os*w23Om + (0.5-kD)*0.5*g3e*g1Os*w31Om + (0.5-kD)*(0.5-kA)*(r)*g3e*g2Os*w32Om + (0.5-kD)*(0.5-kA)*(1-r)*g4e*g1Os*w41Om)
g2Xs_pr<- (1/wmbar)*(0.5*(0.5+kA)*g1e*g2Ys*w12Ym + (0.5-kD)*(0.5+kA)*(r)*g1e*g4Ys*w14Ym + 0.5*(0.5+kA)*g2e*g1Ys*w21Ym + 0.5*1*g2e*g2Ys*w22Ym + (0.5-kD)*(0.5+kA)*(1-r)*g2e*g3Ys*w23Ym + (0.5-kD)*0.5*g2e*g4Ys*w24Ym + (0.5-kD)*(0.5+kA)*(1-r)*g3e*g2Ys*w32Ym + (0.5-kD)*(0.5+kA)*(r)*g4e*g1Ys*w41Ym + (0.5-kD)*0.5*g4e*g2Ys*w42Ym + 0.5*(0.5+kA)*g1e*g2Os*w12Om + (0.5-kD)*(0.5+kA)*(r)*g1e*g4Os*w14Om + (0.5)*(0.5+kA)*g2e*g1Os*w21Om + 0.5*1*g2e*g2Os*w22Om + (0.5-kD)*(0.5+kA)*(1-r)*g2e*g3Os*w23Om + (0.5-kD)*0.5*g2e*g4Os*w24Om + (0.5-kD)*(0.5+kA)*(1-r)*g3e*g2Os*w32Om + (0.5-kD)*(0.5+kA)*(r)*g4e*g1Os*w41Om + (0.5-kD)*0.5*g4e*g2Os*w42Om)
g3Xs_pr<- (1/wmbar)*((0.5-kD)*0.5*g1e*g3Ys*w13Ym + (0.5-kD)*(0.5-kA)*(r)*g1e*g4Ys*w14Ym + (0.5-kD)*(0.5-kA)*(1-r)*g2e*g3Ys*w23Ym + (0.5-kD)*0.5*g3e*g1Ys*w31Ym + (0.5-kD)*(0.5-kA)*(1-r)*g3e*g2Ys*w32Ym + (0.5-kD)*1*g3e*g3Ys*w33Ym + (0.5-kD)*(0.5-kA)*g3e*g4Ys*w34Ym + (0.5-kD)*(0.5-kA)*(r)*g4e*g1Ys*w41Ym + (0.5-kD)*(0.5-kA)*g4e*g3Ys*w43Ym+(0.5-kD)*0.5*g1e*g3Os*w13Om + (0.5-kD)*(0.5-kA)*(r)*g1e*g4Os*w14Om + (0.5-kD)*(0.5-kA)*(1-r)*g2e*g3Os*w23Om + (0.5-kD)*0.5*g3e*g1Os*w31Om + (0.5-kD)*(0.5-kA)*(1-r)*g3e*g2Os*w32Om + (0.5-kD)*1*g3e*g3Os*w33Om + (0.5-kD)*(0.5-kA)*g3e*g4Os*w34Om + (0.5-kD)*(0.5-kA)*(r)*g4e*g1Os*w41Om + (0.5-kD)*(0.5-kA)*g4e*g3Os*w43Om)
g4Xs_pr<- (1/wmbar)*((0.5-kD)*(0.5+kA)*(1-r)*g1e*g4Ys*w14Ym + (0.5-kD)*(0.5+kA)*(r)*g2e*g3Ys*w23Ym + (0.5-kD)*0.5*g2e*g4Ys*w24Ym + (0.5-kD)*(0.5+kA)*(r)*g3e*g2Ys*w32Ym + (0.5-kD)*(0.5+kA)*g3e*g4Ys*w34Ym + (0.5-kD)*(0.5+kA)*(1-r)*g4e*g1Ys*w41Ym + (0.5-kD)*0.5*g4e*g2Ys*w42Ym + (0.5-kD)*(0.5+kA)*g4e*g3Ys*w43Ym + (0.5-kD)*1* g4e*g4Ys*w44Ym + (0.5-kD)*(0.5+kA)*(1-r)*g1e*g4Os*w14Om + (0.5-kD)*(0.5+kA)*(r)*g2e*g3Os*w23Om + (0.5-kD)*0.5*g2e*g4Os*w24Om + (0.5-kD)*(0.5+kA)*(r)*g3e*g2Os*w32Om + (0.5-kD)*(0.5+kA)*g3e*g4Os*w34Om + (0.5-kD)*(0.5+kA)*(1-r)*g4e*g1Os*w41Om + (0.5-kD)*0.5*g4e*g2Os*w42Om + (0.5-kD)*(0.5+kA)*g4e*g3Os*w43Om + (0.5-kD)*1*g4e*g4Os*w44Om)
g1Ys_pr<- (1/wmbar)*(0.5*1* g1e*g1Ys*w11Ym + 0.5*(0.5-kA)* g1e*g2Ys*w12Ym + 0.5*0.5* g1e*g3Ys*w13Ym + 0.5*(0.5-kA)*(1-r)*g1e*g4Ys*w14Ym + 0.5*(0.5-kA)* g2e*g1Ys*w21Ym + 0.5*(0.5-kA)*(r)* g2e*g3Ys*w23Ym + 0.5*0.5* g3e*g1Ys*w31Ym + 0.5*(0.5-kA)*(r)* g3e*g2Ys*w32Ym + 0.5*(0.5-kA)*(1-r)* g4e*g1Ys*w41Ym)
g2Ys_pr<- (1/wmbar)*(0.5*(0.5+kA)* g1e*g2Ys*w12Ym + 0.5*(0.5+kA)*(r)* g1e*g4Ys*w14Ym + 0.5*(0.5+kA)* g2e*g1Ys*w21Ym + 0.5*1* g2e*g2Ys*w22Ym + 0.5*(0.5+kA)*(1-r)* g2e*g3Ys*w23Ym + 0.5*0.5* g2e*g4Ys*w24Ym + 0.5*(0.5+kA)*(1-r)* g3e*g2Ys*w32Ym + 0.5*(0.5+kA)*(r)* g4e*g1Ys*w41Ym + 0.5*0.5* g4e*g2Ys*w42Ym)
g3Ys_pr<- (1/wmbar)*(0.5*0.5* g1e*g3Ys*w13Ym + 0.5*(0.5-kA)*(r)* g1e*g4Ys*w14Ym + 0.5*(0.5-kA)*(1-r)* g2e*g3Ys*w23Ym + 0.5*0.5* g3e*g1Ys*w31Ym + 0.5*(0.5-kA)*(1-r)* g3e*g2Ys*w32Ym + 0.5*1* g3e*g3Ys*w33Ym + 0.5*(0.5-kA)* g3e*g4Ys*w34Ym + 0.5*(0.5-kA)*(r)* g4e*g1Ys*w41Ym + 0.5*(0.5-kA)* g4e*g3Ys*w43Ym)
g4Ys_pr<- (1/wmbar)*(0.5*(0.5+kA)*(1-r)* g1e*g4Ys*w14Ym + 0.5*(0.5+kA)*(r)* g2e*g3Ys*w23Ym + 0.5*0.5* g2e*g4Ys*w24Ym + 0.5*(0.5+kA)*(r)* g3e*g2Ys*w32Ym + 0.5*(0.5+kA)* g3e*g4Ys*w34Ym + 0.5*(0.5+kA)*(1-r)* g4e*g1Ys*w41Ym + 0.5*0.5* g4e*g2Ys*w42Ym + 0.5*(0.5+kA)* g4e*g3Ys*w43Ym + 0.5*1* g4e*g4Ys*w44Ym)
g1Os_pr<- (1/wmbar)*(0*1*g1e*g1Ys*w11Ym + 0*(0.5-kA)* g1e*g2Ys*w12Ym + kD*0.5*g1e*g3Ys*w13Ym + kD*(0.5-kA)*(1-r)*g1e*g4Ys*w14Ym + 0*(0.5-kA)* g2e*g1Ys*w21Ym + kD*(0.5-kA)*(r)* g2e*g3Ys*w23Ym + kD*0.5* g3e*g1Ys*w31Ym + kD*(0.5-kA)*(r)*g3e*g2Ys*w32Ym + kD*(0.5-kA)*(1-r)*g4e*g1Ys*w41Ym +0.5*1*g1e*g1Os*w11Om + 0.5*(0.5-kA)* g1e*g2Os*w12Om + (0.5+kD)*0.5* g1e*g3Os*w13Om + (0.5+kD)*(0.5-kA)*(1-r)* g1e*g4Os*w14Om + 0.5*(0.5-kA)*g2e*g1Os*w21Om + (0.5+kD)*(0.5-kA)*(r)* g2e*g3Os*w23Om + (0.5+kD)*0.5* g3e*g1Os*w31Om + (0.5+kD)*(0.5-kA)*(r)* g3e*g2Os*w32Om + (0.5+kD)*(0.5-kA)*(1-r)* g4e*g1Os*w41Om)
g2Os_pr<- (1/wmbar)*(0*(0.5+kA)*g1e*g2Ys*w12Ym + kD*(0.5+kA)*(r)* g1e*g4Ys*w14Ym + 0*(0.5+kA)* g2e*g1Ys*w21Ym + 0*1* g2e*g2Ys*w22Ym + kD*(0.5+kA)*(1-r)* g2e*g3Ys*w23Ym + kD*0.5* g2e*g4Ys*w24Ym + kD*(0.5+kA)*(1-r)* g3e*g2Ys*w32Ym + kD*(0.5+kA)*(r)* g4e*g1Ys*w41Ym + kD*0.5* g4e*g2Ys*w42Ym + 0.5*(0.5+kA)* g1e*g2Os*w12Om + (0.5+kD)*(0.5+kA)*(r)* g1e*g4Os*w14Om + 0.5*(0.5+kA)* g2e*g1Os*w21Om + 0.5*1*g2e*g2Os*w22Om + (0.5+kD)*(0.5+kA)*(1-r)* g2e*g3Os*w23Om + (0.5+kD)*0.5* g2e*g4Os*w24Om + (0.5+kD)*(0.5+kA)*(1-r)* g3e*g2Os*w32Om + (0.5+kD)*(0.5+kA)*(r)* g4e*g1Os*w41Om + (0.5+kD)*0.5* g4e*g2Os*w42Om)
g3Os_pr<- (1/wmbar)*(kD*0.5*g1e*g3Ys*w13Ym + kD*(0.5-kA)*(r)*g1e*g4Ys*w14Ym + kD*(0.5-kA)*(1-r)* g2e*g3Ys*w23Ym + kD*0.5* g3e*g1Ys*w31Ym + kD*(0.5-kA)*(1-r)*g3e*g2Ys*w32Ym + kD*1* g3e*g3Ys*w33Ym + kD*(0.5-kA)* g3e*g4Ys*w34Ym + kD*(0.5-kA)*(r)* g4e*g1Ys*w41Ym + kD*(0.5-kA)* g4e*g3Ys*w43Ym + (0.5+kD)*0.5* g1e*g3Os*w13Om + (0.5+kD)*(0.5-kA)*(r)* g1e*g4Os*w14Om + (0.5+kD)*(0.5-kA)*(1-r)* g2e*g3Os*w23Om + (0.5+kD)*0.5* g3e*g1Os*w31Om + (0.5+kD)*(0.5-kA)*(1-r)* g3e*g2Os*w32Om + (0.5+kD)*1* g3e*g3Os*w33Om + (0.5+kD)*(0.5-kA)* g3e*g4Os*w34Om + (0.5+kD)*(0.5-kA)*(r)* g4e*g1Os*w41Om + (0.5+kD)*(0.5-kA)* g4e*g3Os*w43Om)
g4Os_pr<- (1/wmbar)*(kD*(0.5+kA)*(1-r)*g1e*g4Ys*w14Ym + kD*(0.5+kA)*(r)*g2e*g3Ys*w23Ym + kD*0.5*g2e*g4Ys*w24Ym + kD*(0.5+kA)*(r)*g3e*g2Ys*w32Ym + kD*(0.5+kA)*g3e*g4Ys*w34Ym + kD*(0.5+kA)*(1-r)*g4e*g1Ys*w41Ym + kD*0.5*g4e*g2Ys*w42Ym + kD*(0.5+kA)*g4e*g3Ys*w43Ym + kD*(0.5+kA)*1*g4e*g4Ys*w44Ym + (0.5+kD)*(0.5+kA)*(1-r)*g1e*g4Os*w14Om + (0.5+kD)*(0.5+kA)*(r)*g2e*g3Os*w23Om + (0.5+kD)*0.5*g2e*g4Os*w24Om + (0.5+kD)*(0.5+kA)*(r)*g3e*g2Os*w32Om + (0.5+kD)*(0.5+kA)*g3e*g4Os*w34Om + (0.5+kD)*(0.5+kA)*(1-r)*g4e*g1Os*w41Om + (0.5+kD)*0.5*g4e*g2Os*w42Om + (0.5+kD)*(0.5+kA)*g4e*g3Os*w43Om + (0.5+kD)*1*g4e*g4Os*w44Om)
g1e <- g1e_pr
g2e <- g2e_pr
g3e <- g3e_pr
g4e <- g4e_pr
g1Xs <- g1Xs_pr
g2Xs <- g2Xs_pr
g3Xs <- g3Xs_pr
g4Xs <- g4Xs_pr
g1Ys <- g1Ys_pr
g2Ys <- g2Ys_pr
g3Ys <- g3Ys_pr
g4Ys <- g4Ys_pr
}
g1e
g2e
g3e
g4e
g1Xs
g2Xs
g1Ys
g2Ys
dA2end
library(tidyverse)
library(viridis)
library(ggpattern)
library(cowplot)
# Administrative setup
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Read data
dA <- read.table("data_5A.txt", T) %>% as_tibble()
dB <- read.table("data_5B.txt", T) %>% as_tibble()
dC <- read.table("data_5C.txt", T) %>% as_tibble()
dD <- read.table("data_5D.txt", T) %>% as_tibble()
dE <- read.table("data_5E.txt", T) %>% as_tibble()
# Plot A
dA2 <- dA %>% gather(X, Y, A, D, O, value = "Frequency", key = "Allele")
dA2end <- dA2 %>% filter(G == max(G))
dA2end
delta <- 0.045
dtA <- tibble(text = c('X', 'Y', 'O',
'italic(A)[2]', 'italic(D)[2]'),
x = c(450, 450, 450, 400, 450),
y = c(0.387 + delta,
0 + delta,
0.619 + delta,
0.387 + delta,
0.357 - delta),
Allele = unique(dA2$Allele))
dtA
pA <- dA2 %>% filter(G <= 500) %>% ggplot(aes(G, Frequency, color = Allele)) + geom_line(linewidth = 0.8) +
scale_color_viridis(discrete = T, end = 0.8,
labels = c(bquote(italic(A)[2]),
bquote(italic(D)[2]),
"X", "Y")) +
geom_hline(yintercept = 0.5, color = "black", linetype = 2, linewidth = 0.8) +
scale_x_continuous(limits = c(0, 500), expand = c(0,0)) +
scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1), expand = c(0,0)) +
labs(x = "Generations") +
geom_text(data = dtA, aes(x, y, color = Allele, label = text), parse = T, inherit.aes = F) +
theme(panel.background = element_rect(fill = "white"),
axis.line = element_line(color = "black"))
pA
# Plot B
dB2 <- dB %>% filter(G <= 500) %>% gather(DA2D2, DA2Y, DD2Y, value = "LD", key = "Haplotype")
dB2end <- dB2 %>% filter(G == max(G))
delta <- 0.0175
dtB <- tibble(text = c(bquote(italic(Assister-Distorter)),
bquote(italic(Assister)*"-XY0"),
bquote(italic(Distorter)*"-XY0")),
x = c(390,420,420), y = c(0.25, 0.035, 0.06),
Haplotype = unique(dB2$Haplotype))
dtB
pB <- dB2 %>% filter(G <= 500) %>% ggplot(aes(G, LD, color = Haplotype)) + geom_line(linewidth = 0.8) +
scale_color_viridis(discrete = T, end = 0.8,
labels = c(bquote(italic(A)[2]~italic(D)[2]),
bquote(italic(A)[2]~"Y"),
bquote(italic(D)[2]~"Y"))) +
geom_hline(yintercept = 0, color = "black", linetype = 2, linewidth = 0.8) +
scale_x_continuous(limits = c(0, 500), expand = c(0,0)) +
scale_y_continuous(limits = c(0, 0.25),
breaks = c(0, 0.05, 0.1, 0.15, 0.2,0.25),
expand = c(0.01,0.01)) +
labs(x = "Generations", y = "Linkage Disequilibrium") +
geom_text(data = dtB, aes(x, y, color = Haplotype, label = text), parse = T, inherit.aes = F) +
theme(panel.background = element_rect(fill = "white", color = "black"),
axis.line = element_line(color = "black"))
pB
# Plot C
dC2 <- dC %>% mutate(tot = A1D1X + A2D1X + A1D1Y + A2D1Y +
A1D2X + A2D2X + A1D2Y + A2D2Y +
A1D1O + A1D2O + A2D1O + A2D2O)
dC2 <- dC2 %>% mutate(A1D1X = A1D1X / tot,
A2D1X = A2D1X / tot,
A1D1Y = A1D1Y / tot,
A2D1Y = A2D1Y / tot,
A1D2X = A1D2X / tot,
A2D2X = A2D2X / tot,
A1D2Y = A1D2Y / tot,
A2D2Y = A2D2Y / tot)
dC3 <- dC2 %>% gather(A1D1X, A2D1X, A1D1Y, A2D1Y, A1D1O, A2D1O,
A1D2X, A2D2X, A1D2Y, A2D2Y, A1D2O, A2D2O,
value = "Frequency", key = "Haplotype")
dC4 <- dC3 %>% mutate(Haplotype = factor(Haplotype, c("A1D1X", "A2D1X", "A1D1Y", "A2D1Y",
"A1D1O", "A2D1O",
"A1D2X", "A2D2X", "A1D2Y", "A2D2Y",
"A1D2O", "A2D2O")),
Hatch = ifelse(Haplotype %in% c("A1D2X", "A2D2X", "A1D2Y", "A2D2Y",
"A1D2O", "A2D2O"), 1, 0))
# max(dC3$tot)
text <- c(bquote(italic(A)[1]~italic(D)[1]~"X"),
bquote(italic(A)[2]~italic(D)[1]~"X"),
bquote(italic(A)[2]~italic(D)[1]~"O"),
bquote(italic(A)[2]~italic(D)[2]~"X"),
bquote(italic(A)[2]~italic(D)[2]~"O"),
bquote(italic(A)[1]~italic(D)[1]~"Y"),
bquote(italic(A)[2]~italic(D)[1]~"Y"))
yvals <- c(0.85, 0.72, 0.55, 0.34, 0.13, 0.46, 0.23)
xvals <- c(375, 75, 375, 375, 375, 125, 75)
angle <- c(0, 0, 0, 0, 0, 0, 0)
dtC <- tibble(text, yvals, xvals, angle)
vircol <- viridis_pal()(12)
pC <- dC4 %>% filter(G <=500) %>% filter(Hatch == 1) %>% ggplot(aes(G, Frequency, fill = Haplotype)) +
geom_area(data = dC4, aes(G, Frequency, fill = Haplotype),
color = "black", alpha = 0.8) +
geom_area_pattern(aes(pattern = Hatch),
color = 'black', alpha = 0, pattern = "stripe",
pattern_angle = 45, pattern_color = "black",
pattern_density = 0.001,
pattern_spacing = 0.03) +
geom_rect(aes(xmin = 335, xmax = 415, ymin = 0.115, ymax = 0.145), fill = "white") +
geom_rect(aes(xmin = 335, xmax = 415, ymin = 0.325, ymax = 0.355), fill = "white") +
annotate('rect', xmin = 335, xmax = 415, ymin = 0.115, ymax = 0.145,
alpha = 0.8, fill = vircol[12]) +
annotate('rect', xmin = 335, xmax = 415, ymin = 0.325, ymax = 0.355,
alpha = 0.8, fill = vircol[8]) +
# geom_rect(aes(xmin = 420, xmax = 500, ymin = 0.113, ymax = 0.115), fill = "white") +
# annotate('rect', xmin = 420, xmax = 500, ymin = 0.113, ymax = 0.115,
#          alpha = 0.8, fill = vircol[6]) +
geom_area(data = dC4, aes(G, Frequency, fill = Haplotype),
color = "black", alpha = 0) +
theme(plot.background = element_blank(),
panel.background = element_blank()) +
scale_fill_viridis(discrete = T) +
geom_text(data = dtC, aes(x = xvals, y = yvals, label = text, angle = angle*90), inherit.aes = F, parse = T) +
scale_x_continuous(limits = c(0, 501), expand = c(0,0)) +
scale_y_continuous(limits = c(0, 1.001), expand =c(0.0, 0),
breaks = c(0, 0.25, 0.5, 0.75, 1)) +
labs(x = "Generations", y = "Frequency") +
theme(panel.background = element_rect(fill = "white", color = "black"),
axis.line = element_line(color = "black"))
pC
pD <- dD %>% ggplot(aes(kD, kA, z = DF)) + geom_contour_filled(color = "black",bins=10) +
scale_fill_viridis(option = "A", discrete = T,
labels = seq(0, 0.7, 0.05)) +
scale_x_continuous(limits = c(0, 0.5), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.5), expand = c(0, 0),
breaks = seq(0, 0.5, 0.1)) +
labs(x = bquote(italic(trans)~"drive strength ("*italic(k)[D]*")"),
y = bquote(italic(cis)~"drive strength ("*italic(k)[A]*")"),
fill = bquote("["*italic(D)[2]~"]")) +
theme(panel.background = element_rect(fill = "white", color = "black"))
# pD
# Plot E
pE <- dE %>% ggplot(aes(kD, kA, z = SR)) + geom_contour_filled(color = "black", bins=11) +
scale_fill_viridis(option = "mako", discrete = T,
labels = seq(0.5, 0.70, 0.02)) +
scale_x_continuous(limits = c(0, 0.5), expand = c(0,0)) +
scale_y_continuous(limits = c(0, 0.5), expand = c(0, 0),
breaks = c(0, 0.25, 0.5, 0.75, 1)) +
labs(x = bquote(italic(trans)~"drive strength ("*italic(k)[D]*")"),
y = bquote(italic(cis)~"drive strength ("*italic(k)[A]*")"),
fill = "Sex ratio") +
theme(panel.background = element_rect(fill = "white", color = "black"))
pE
legend_D <- get_legend(
pD +
guides(fill = guide_legend(reverse = TRUE)) +
theme(legend.key.size = unit(0.5, "cm")) +
theme(legend.key.height = unit(0.35, "cm")) # Adjust size here
)
legend_E <- get_legend(
pE +
guides(fill = guide_legend(reverse = TRUE)) +
theme(legend.key.size = unit(0.5, "cm"))+
theme(legend.key.height = unit(0.35, "cm")) # Adjust size here
)
topleft <- plot_grid(pA + theme(legend.position = "none"),
pB + theme(legend.position = "none"),
ncol = 1, nrow = 2, labels = c("A", "B"))
topright  <-  plot_grid(pC + theme(legend.position = "none"), labels = "C")
top <- plot_grid(topleft, NULL, topright,NULL, ncol = 4,
rel_widths = c(0.425, 0.075, 0.45, 0.075))
bottom <- plot_grid(pD+ theme(legend.position = "none"), legend_D,
pE + theme(legend.position = "none"), legend_E,
ncol = 4, labels = c("D", "", "E", ""),
rel_widths = c(0.425, 0.075, 0.45, 0.075))
plot <-  plot_grid(top, bottom, ncol = 1, nrow = 2, rel_heights = c(0.6, 0.4))
plot
pdf(file = "2025_04_24_Figure_5.pdf", width = 10, height = 10)
plot
dev.off()
png(file = "2025_04_24_Figure_5.png", width = 10, height = 10, units = "in", res = 1000)
plot
dev.off()
